name: Tests
on: [push, workflow_dispatch, workflow_call]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan
      - name: Run flake8
        run: flake8 . --count --max-line-length=127 --statistics --exclude ckan

  test:
    needs: lint
    strategy:
      matrix:
        include:
          - ckan-version: "2.11"
            ckan-image: "ckan/ckan-dev:2.11-py3.10"
          - ckan-version: "2.10"
            ckan-image: "ckan/ckan-dev:2.10-py3.10"
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.ckan-image }}
      options: --user root
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}-solr9
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install requirements
        run: |
          git clone https://github.com/ckan/ckanext-harvest
          cd ckanext-harvest
          pip install -r pip-requirements.txt
          pip install -e .
          cd ..

          git clone https://github.com/vrk-kpa/api-catalog
          cd api-catalog
          git submodule update --init --recursive

          cd ckanext/ckanext-apicatalog
          pip install -e .

          cd ../ckanext-scheming
          pip install -e .

          cd ../ckanext-fluent
          pip install -e .

          cd ../ckanext-markdown_editor
          pip install -e .

          cd ../../..

          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          pip install -e .
          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

      - name: Setup extension
        run: |
          ckan -c test.ini db init
          ckan -c test.ini db upgrade -p harvest
          ckan -c test.ini xroad init-db

      - name: Run tests
        run: pytest --ckan-ini=test.ini --cov=ckanext.xroad_integration --disable-warnings ckanext/xroad_integration/tests
      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@develop
